##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 8080 default_server;
	listen [::]:8080 default_server;
	
	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /home/www;
	#root /home/ems;
	
	# Add index.php to the list if you are using PHP
	index index.html index.php index.htm;

	add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD" always;
        add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept" always;

	server_name 10.102.25.210;
	port_in_redirect on;
	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		#try_files $uri $uri/ /index.php;
		try_files $uri/ $uri /index.php?$query_string;
		#aio threads;
	}
	error_page 404 /404.php;
	error_page 500 502 503 504 /50x.html;
		location = /50x.html {
		root /home/www;
		#root /home/ems;
	}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	location ~ \.php$ {
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		try_files $uri =404;
		fastcgi_read_timeout 600;
		fastcgi_pass    php_fpm;
		fastcgi_keep_conn off;
                proxy_next_upstream error timeout invalid_header http_500 http_504;
		include         fastcgi_params;
    		fastcgi_param   SCRIPT_FILENAME    $document_root$fastcgi_script_name;
    		fastcgi_param   SCRIPT_NAME        $fastcgi_script_name;
		#include snippets/fastcgi-php.conf;
	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
	location /nginx_status {
          stub_status on;
          access_log   on;
          allow 127.0.0.1;
          deny all;
        }
	
	location ~* \.(?:manifest|appcache|html?|xml|json)$ {
		expires -1;	
	}

	location ~* \.(?:rss|atom)$ {
		expires 1h;
		add_header Cache-Control "public";
	}

	location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc|swf|woff|ttf)$ {
		expires 356d;
		access_log off;
		log_not_found off;
		add_header Cache-Control "public";
		add_header Pragma public;
	}

	location ~* \.(?:css|js)$ {
  		expires 356d;
  		access_log off;
		add_header Pragma public;
  		add_header Cache-Control "public";
	}
	location = /favicon.ico {
                access_log off;
                log_not_found off;
        }

        # robots noise...
        location = /robots.txt {
                log_not_found off;
                access_log off;
                allow all;
        }
}

 

# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#

#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
